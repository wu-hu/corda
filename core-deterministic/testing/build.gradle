apply plugin: 'kotlin'

def keyStoreDir = "$buildDir/keystore"

dependencies {
    testCompile project(path: ':core-deterministic', configuration: 'runtimeArtifacts')
    testCompile project(path: ':serialization-deterministic', configuration: 'runtimeArtifacts')
    testCompile project(path: ':core-deterministic:testing:data', configuration: 'testData')
    testCompile project(':core-deterministic:testing:common')
    testCompile(project(':finance')) {
        transitive = false
    }

    testCompile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.assertj:assertj-core:$assertj_version"
    testCompile "junit:junit:$junit_version"
}

// Generate a fresh keystore, if we're on a platform that supports OpenSSL.
// Other platforms will need to use the keystore we generated earlier.
task createKeyStores(type: Exec) {
    inputs.dir "$projectDir/src/scripts"
    outputs.files "$keyStoreDir/txsignature.pfx"
    workingDir keyStoreDir
    commandLine "$projectDir/src/scripts/generate-keystores.sh"

    // This task cannot run on Windows.
    ignoreExitValue = true
}

processTestResources {
    dependsOn createKeyStores
    from keyStoreDir
}
